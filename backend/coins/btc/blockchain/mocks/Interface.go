// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import blockchain "github.com/digitalbitbox/bitbox-wallet-app/backend/coins/btc/blockchain"
import btcutil "github.com/btcsuite/btcutil"
import chainhash "github.com/btcsuite/btcd/chaincfg/chainhash"
import mock "github.com/stretchr/testify/mock"
import wire "github.com/btcsuite/btcd/wire"

// Interface is an autogenerated mock type for the Interface type
type Interface struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Interface) Close() {
	_m.Called()
}

// ConnectionStatus provides a mock function with given fields:
func (_m *Interface) ConnectionStatus() blockchain.Status {
	ret := _m.Called()

	var r0 blockchain.Status
	if rf, ok := ret.Get(0).(func() blockchain.Status); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(blockchain.Status)
	}

	return r0
}

// EstimateFee provides a mock function with given fields: _a0, _a1, _a2
func (_m *Interface) EstimateFee(_a0 int, _a1 func(*btcutil.Amount) error, _a2 func(error)) {
	_m.Called(_a0, _a1, _a2)
}

// GetMerkle provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *Interface) GetMerkle(_a0 chainhash.Hash, _a1 int, _a2 func([]blockchain.TXHash, int) error, _a3 func(error)) {
	_m.Called(_a0, _a1, _a2, _a3)
}

// Headers provides a mock function with given fields: _a0, _a1, _a2
func (_m *Interface) Headers(_a0 int, _a1 int, _a2 func([]*wire.BlockHeader, int)) {
	_m.Called(_a0, _a1, _a2)
}

// HeadersSubscribe provides a mock function with given fields: _a0, _a1
func (_m *Interface) HeadersSubscribe(_a0 func() func(error), _a1 func(*blockchain.Header) error) {
	_m.Called(_a0, _a1)
}

// RegisterOnConnectionStatusChangedEvent provides a mock function with given fields: _a0
func (_m *Interface) RegisterOnConnectionStatusChangedEvent(_a0 func(blockchain.Status)) {
	_m.Called(_a0)
}

// RelayFee provides a mock function with given fields: _a0, _a1
func (_m *Interface) RelayFee(_a0 func(btcutil.Amount), _a1 func(error)) {
	_m.Called(_a0, _a1)
}

// ScriptHashGetHistory provides a mock function with given fields: _a0, _a1, _a2
func (_m *Interface) ScriptHashGetHistory(_a0 blockchain.ScriptHashHex, _a1 func(blockchain.TxHistory) error, _a2 func(error)) {
	_m.Called(_a0, _a1, _a2)
}

// ScriptHashSubscribe provides a mock function with given fields: _a0, _a1, _a2
func (_m *Interface) ScriptHashSubscribe(_a0 func() func(error), _a1 blockchain.ScriptHashHex, _a2 func(string)) {
	_m.Called(_a0, _a1, _a2)
}

// TransactionBroadcast provides a mock function with given fields: _a0
func (_m *Interface) TransactionBroadcast(_a0 *wire.MsgTx) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*wire.MsgTx) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// TransactionGet provides a mock function with given fields: _a0, _a1, _a2
func (_m *Interface) TransactionGet(_a0 chainhash.Hash, _a1 func(*wire.MsgTx) error, _a2 func(error)) {
	_m.Called(_a0, _a1, _a2)
}

// Copyright 2025 Shift Crypto AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: bluetooth.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BluetoothUpgradeInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirmwareLength uint32 `protobuf:"varint,1,opt,name=firmware_length,json=firmwareLength,proto3" json:"firmware_length,omitempty"`
}

func (x *BluetoothUpgradeInitRequest) Reset() {
	*x = BluetoothUpgradeInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bluetooth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BluetoothUpgradeInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BluetoothUpgradeInitRequest) ProtoMessage() {}

func (x *BluetoothUpgradeInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bluetooth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BluetoothUpgradeInitRequest.ProtoReflect.Descriptor instead.
func (*BluetoothUpgradeInitRequest) Descriptor() ([]byte, []int) {
	return file_bluetooth_proto_rawDescGZIP(), []int{0}
}

func (x *BluetoothUpgradeInitRequest) GetFirmwareLength() uint32 {
	if x != nil {
		return x.FirmwareLength
	}
	return 0
}

type BluetoothChunkRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *BluetoothChunkRequest) Reset() {
	*x = BluetoothChunkRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bluetooth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BluetoothChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BluetoothChunkRequest) ProtoMessage() {}

func (x *BluetoothChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bluetooth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BluetoothChunkRequest.ProtoReflect.Descriptor instead.
func (*BluetoothChunkRequest) Descriptor() ([]byte, []int) {
	return file_bluetooth_proto_rawDescGZIP(), []int{1}
}

func (x *BluetoothChunkRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type BluetoothSuccess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BluetoothSuccess) Reset() {
	*x = BluetoothSuccess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bluetooth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BluetoothSuccess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BluetoothSuccess) ProtoMessage() {}

func (x *BluetoothSuccess) ProtoReflect() protoreflect.Message {
	mi := &file_bluetooth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BluetoothSuccess.ProtoReflect.Descriptor instead.
func (*BluetoothSuccess) Descriptor() ([]byte, []int) {
	return file_bluetooth_proto_rawDescGZIP(), []int{2}
}

type BluetoothRequestChunkResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint32 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Length uint32 `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *BluetoothRequestChunkResponse) Reset() {
	*x = BluetoothRequestChunkResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bluetooth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BluetoothRequestChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BluetoothRequestChunkResponse) ProtoMessage() {}

func (x *BluetoothRequestChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bluetooth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BluetoothRequestChunkResponse.ProtoReflect.Descriptor instead.
func (*BluetoothRequestChunkResponse) Descriptor() ([]byte, []int) {
	return file_bluetooth_proto_rawDescGZIP(), []int{3}
}

func (x *BluetoothRequestChunkResponse) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *BluetoothRequestChunkResponse) GetLength() uint32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type BluetoothRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//
	//	*BluetoothRequest_UpgradeInit
	//	*BluetoothRequest_Chunk
	Request isBluetoothRequest_Request `protobuf_oneof:"request"`
}

func (x *BluetoothRequest) Reset() {
	*x = BluetoothRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bluetooth_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BluetoothRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BluetoothRequest) ProtoMessage() {}

func (x *BluetoothRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bluetooth_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BluetoothRequest.ProtoReflect.Descriptor instead.
func (*BluetoothRequest) Descriptor() ([]byte, []int) {
	return file_bluetooth_proto_rawDescGZIP(), []int{4}
}

func (m *BluetoothRequest) GetRequest() isBluetoothRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *BluetoothRequest) GetUpgradeInit() *BluetoothUpgradeInitRequest {
	if x, ok := x.GetRequest().(*BluetoothRequest_UpgradeInit); ok {
		return x.UpgradeInit
	}
	return nil
}

func (x *BluetoothRequest) GetChunk() *BluetoothChunkRequest {
	if x, ok := x.GetRequest().(*BluetoothRequest_Chunk); ok {
		return x.Chunk
	}
	return nil
}

type isBluetoothRequest_Request interface {
	isBluetoothRequest_Request()
}

type BluetoothRequest_UpgradeInit struct {
	UpgradeInit *BluetoothUpgradeInitRequest `protobuf:"bytes,1,opt,name=upgrade_init,json=upgradeInit,proto3,oneof"`
}

type BluetoothRequest_Chunk struct {
	Chunk *BluetoothChunkRequest `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*BluetoothRequest_UpgradeInit) isBluetoothRequest_Request() {}

func (*BluetoothRequest_Chunk) isBluetoothRequest_Request() {}

type BluetoothResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//
	//	*BluetoothResponse_Success
	//	*BluetoothResponse_RequestChunk
	Response isBluetoothResponse_Response `protobuf_oneof:"response"`
}

func (x *BluetoothResponse) Reset() {
	*x = BluetoothResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bluetooth_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BluetoothResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BluetoothResponse) ProtoMessage() {}

func (x *BluetoothResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bluetooth_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BluetoothResponse.ProtoReflect.Descriptor instead.
func (*BluetoothResponse) Descriptor() ([]byte, []int) {
	return file_bluetooth_proto_rawDescGZIP(), []int{5}
}

func (m *BluetoothResponse) GetResponse() isBluetoothResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *BluetoothResponse) GetSuccess() *BluetoothSuccess {
	if x, ok := x.GetResponse().(*BluetoothResponse_Success); ok {
		return x.Success
	}
	return nil
}

func (x *BluetoothResponse) GetRequestChunk() *BluetoothRequestChunkResponse {
	if x, ok := x.GetResponse().(*BluetoothResponse_RequestChunk); ok {
		return x.RequestChunk
	}
	return nil
}

type isBluetoothResponse_Response interface {
	isBluetoothResponse_Response()
}

type BluetoothResponse_Success struct {
	Success *BluetoothSuccess `protobuf:"bytes,1,opt,name=success,proto3,oneof"`
}

type BluetoothResponse_RequestChunk struct {
	RequestChunk *BluetoothRequestChunkResponse `protobuf:"bytes,2,opt,name=request_chunk,json=requestChunk,proto3,oneof"`
}

func (*BluetoothResponse_Success) isBluetoothResponse_Response() {}

func (*BluetoothResponse_RequestChunk) isBluetoothResponse_Response() {}

var File_bluetooth_proto protoreflect.FileDescriptor

var file_bluetooth_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x62, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x73, 0x68, 0x69, 0x66, 0x74, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x62,
	0x69, 0x74, 0x62, 0x6f, 0x78, 0x30, 0x32, 0x22, 0x46, 0x0a, 0x1b, 0x42, 0x6c, 0x75, 0x65, 0x74,
	0x6f, 0x6f, 0x74, 0x68, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61,
	0x72, 0x65, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0e, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22,
	0x2b, 0x0a, 0x15, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x12, 0x0a, 0x10,
	0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x22, 0x4f, 0x0a, 0x1d, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x22, 0xba, 0x01, 0x0a, 0x10, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x0c, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73,
	0x68, 0x69, 0x66, 0x74, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x62, 0x69, 0x74, 0x62, 0x6f,
	0x78, 0x30, 0x32, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x43,
	0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x62, 0x69, 0x74, 0x62,
	0x6f, 0x78, 0x30, 0x32, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68,
	0x75, 0x6e, 0x6b, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xbf,
	0x01, 0x0a, 0x11, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x6f, 0x2e, 0x62, 0x69, 0x74, 0x62, 0x6f, 0x78, 0x30, 0x32, 0x2e, 0x42, 0x6c, 0x75,
	0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x5a, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x33, 0x2e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x2e, 0x62, 0x69,
	0x74, 0x62, 0x6f, 0x78, 0x30, 0x32, 0x2e, 0x42, 0x6c, 0x75, 0x65, 0x74, 0x6f, 0x6f, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bluetooth_proto_rawDescOnce sync.Once
	file_bluetooth_proto_rawDescData = file_bluetooth_proto_rawDesc
)

func file_bluetooth_proto_rawDescGZIP() []byte {
	file_bluetooth_proto_rawDescOnce.Do(func() {
		file_bluetooth_proto_rawDescData = protoimpl.X.CompressGZIP(file_bluetooth_proto_rawDescData)
	})
	return file_bluetooth_proto_rawDescData
}

var file_bluetooth_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_bluetooth_proto_goTypes = []any{
	(*BluetoothUpgradeInitRequest)(nil),   // 0: shiftcrypto.bitbox02.BluetoothUpgradeInitRequest
	(*BluetoothChunkRequest)(nil),         // 1: shiftcrypto.bitbox02.BluetoothChunkRequest
	(*BluetoothSuccess)(nil),              // 2: shiftcrypto.bitbox02.BluetoothSuccess
	(*BluetoothRequestChunkResponse)(nil), // 3: shiftcrypto.bitbox02.BluetoothRequestChunkResponse
	(*BluetoothRequest)(nil),              // 4: shiftcrypto.bitbox02.BluetoothRequest
	(*BluetoothResponse)(nil),             // 5: shiftcrypto.bitbox02.BluetoothResponse
}
var file_bluetooth_proto_depIdxs = []int32{
	0, // 0: shiftcrypto.bitbox02.BluetoothRequest.upgrade_init:type_name -> shiftcrypto.bitbox02.BluetoothUpgradeInitRequest
	1, // 1: shiftcrypto.bitbox02.BluetoothRequest.chunk:type_name -> shiftcrypto.bitbox02.BluetoothChunkRequest
	2, // 2: shiftcrypto.bitbox02.BluetoothResponse.success:type_name -> shiftcrypto.bitbox02.BluetoothSuccess
	3, // 3: shiftcrypto.bitbox02.BluetoothResponse.request_chunk:type_name -> shiftcrypto.bitbox02.BluetoothRequestChunkResponse
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_bluetooth_proto_init() }
func file_bluetooth_proto_init() {
	if File_bluetooth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bluetooth_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BluetoothUpgradeInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bluetooth_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*BluetoothChunkRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bluetooth_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BluetoothSuccess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bluetooth_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BluetoothRequestChunkResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bluetooth_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*BluetoothRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bluetooth_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*BluetoothResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bluetooth_proto_msgTypes[4].OneofWrappers = []any{
		(*BluetoothRequest_UpgradeInit)(nil),
		(*BluetoothRequest_Chunk)(nil),
	}
	file_bluetooth_proto_msgTypes[5].OneofWrappers = []any{
		(*BluetoothResponse_Success)(nil),
		(*BluetoothResponse_RequestChunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bluetooth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_bluetooth_proto_goTypes,
		DependencyIndexes: file_bluetooth_proto_depIdxs,
		MessageInfos:      file_bluetooth_proto_msgTypes,
	}.Build()
	File_bluetooth_proto = out.File
	file_bluetooth_proto_rawDesc = nil
	file_bluetooth_proto_goTypes = nil
	file_bluetooth_proto_depIdxs = nil
}

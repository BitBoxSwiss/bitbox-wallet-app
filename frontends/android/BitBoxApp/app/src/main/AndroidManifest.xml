<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <uses-permission android:name="android.permission.INTERNET"/>
    <!-- for checking if using mobile data -->
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-feature android:name="android.hardware.usb.host" />

    <!-- for QR code scanning -->
    <uses-permission android:name="android.permission.CAMERA" />
    <uses-feature android:name="android.hardware.camera" android:required="false" />
    <uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />

    <!-- for Go backend service -->
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE"/>
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_DATA_SYNC"/>
    <uses-permission android:name="android.permission.FOREGROUND_SERVICE_CONNECTED_DEVICE"/>

    <!-- to allow external links and mailto -->
    <queries>
        <intent>
            <action android:name="android.intent.action.VIEW" />
            <category android:name="android.intent.category.BROWSABLE" />
            <data android:scheme="https" />
        </intent>
        <intent>
            <action android:name="android.intent.action.VIEW" />
            <category android:name="android.intent.category.BROWSABLE" />
            <data android:scheme="mailto" />
        </intent>
    </queries>

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <!-- This tag might be required when interacting with Google Play Services, see https://developers.google.com/android/guides/setup. -->
        <!-- We interact with Google Play services through the JS QR code scanning library, which invokes the GPS Barcode scanner if available. -->
        <meta-data android:name="com.google.android.gms.version" android:value="@integer/google_play_services_version" />
        <!-- launchMode: Makes sure that onIntent/onResume is reliably called on usb attached/detached events -->
        <!-- configChanges: Makes sure onCreate is not called on those changes, which prevents an ugly reload -->
        <activity
            android:name=".MainActivity"
            android:launchMode="singleTop"
            android:taskAffinity=""
            android:configChanges="orientation|screenSize|keyboardHidden|keyboard|uiMode"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
            <intent-filter>
                <action android:name="android.hardware.usb.action.USB_DEVICE_ATTACHED" />
            </intent-filter>
            <!-- Register URI protocol to handle 'aopp:...' links -->
            <!-- For testing, you can simulate an aopp link click using: -->
            <!-- adb shell 'am start -n ch.shiftcrypto.bitboxapp.debug/ch.shiftcrypto.bitboxapp.MainActivity -a android.intent.action.VIEW -d "aopp:..."' -->
            <intent-filter>
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <!--BROWSABLE: can be opened by clicking a link in a browser or email -->
                <category android:name="android.intent.category.BROWSABLE" />
                <!-- No andriod:host attribute because there is no host in "aopp:?..." -->
                <data android:scheme="aopp" />
            </intent-filter>
            <meta-data android:name="android.hardware.usb.action.USB_DEVICE_ATTACHED"
                android:resource="@xml/device_filter" />
        </activity>
        <service android:name=".GoService" android:foregroundServiceType="dataSync" />

        <!-- to allow external apps to open local files (e.g. exported csv) -->
        <provider
            android:name="androidx.core.content.FileProvider"
            android:authorities="${applicationId}.provider"
            android:exported="false"
            android:grantUriPermissions="true">
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/provider_paths"/>
        </provider>
    </application>


</manifest>
